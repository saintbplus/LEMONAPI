CREATE TYPE order_type AS ENUM ('EAT IN', 'DELIVERY', 'TAKE AWAY');
CREATE DOMAIN postcode as INTEGER CHECK(VALUE > 9999 AND VALUE < 100000);

CREATE TABLE deli_service(
	d_service_id SERIAL PRIMARY KEY,
	service_name VARCHAR(30)
);

CREATE TABLE membership(
	membership_id SMALLSERIAL PRIMARY KEY NOT NULL,
	membership_tier VARCHAR(50) NOT NULL,
	price REAL NOT NULL,
	detial VARCHAR(400)
);


CREATE TABLE membership_infos(
	meminfo_id SERIAL PRIMARY KEY,
	membership_id INTEGER REFERENCES membership(membership_id) ON DELETE RESTRICT NOT NULL,
	start_date TIMESTAMP NOT NULL,
	end_date TIMESTAMP
);

CREATE TABLE address_infos(
	address_id SERIAL PRIMARY KEY,
	address VARCHAR(300) NOT NULL,
	address2 VARCHAR(300),
	sub_district VARCHAR(100) NOT NULL,
	province VARCHAR(100) NOT NULL,
	district VARCHAR(100) NOT NULL,
	postcode postcode NOT NULL
);

CREATE TABLE lemon_accounts(
	acc_id SERIAL PRIMARY KEY,
	login_name VARCHAR(20) NOT NULL UNIQUE,
	password VARCHAR(100) NOT NULL,
	join_date TIMESTAMP NOT NULL DEFAULT NOW(),
	meminfo_id INTEGER REFERENCES membership_infos(meminfo_id) ON DELETE SET NULL
);

CREATE TABLE owners(
	owner_id SERIAL PRIMARY KEY,
	first_name VARCHAR(40) NOT NULL,
	last_name VARCHAR(40) NOT NULL,
	email VARCHAR(120),
	address_id INTEGER REFERENCES address_infos(address_id) ON DELETE SET NULL,
	acc_id INTEGER REFERENCES lemon_accounts(acc_id) NOT NULL
);

CREATE TABLE resturants(
	rest_id SERIAL PRIMARY KEY,
	rest_name VARCHAR(50) NOT NULL,
	address_id INTEGER REFERENCES address_infos(address_id) ON DELETE SET NULL,
	isClosed bool DEFAULT false Not NULL,
	acc_id INTEGER REFERENCES lemon_accounts(acc_id) ON DELETE RESTRICT NOT NULL,
	CONSTRAINT branch_name_unique UNIQUE (rest_name, acc_id)
);

CREATE TABLE contact_no(
	contact_id SERIAL PRIMARY KEY,
	no PHONE_NO NOT NULL,
	owner_id INTEGER REFERENCES owners(owner_id) ON DELETE NO ACTION,
	rest_id INTEGER REFERENCES resturants(rest_id) ON DELETE NO ACTION
);

CREATE TABLE rest_staffs(
	staff_id SERIAL PRIMARY KEY,
	name varchar(90) NOT NULL,
	login_password varchar(100),
	avatar TEXT NOT NULL DEFAULT 'https://ucarecdn.com/e7c8905a-b16a-4aef-95f6-79ec09ce2f9a/cat30.jpg',
	isManager bool DEFAULT false,
	phone_no PHONE_NO,
	rest_id integer REFERENCES resturants(rest_id) ON DELETE RESTRICT NOT NULL,
	UNIQUE (name, rest_id)
);

CREATE TABLE food_items(
	food_id SERIAL PRIMARY KEY,
	food_name VARCHAR(100) NOT NULL,
	price REAL NOT NULL,
	detail VARCHAR(400),
	rest_id INTEGER REFERENCES resturants(rest_id) ON DELETE RESTRICT NOT NULL
);

CREATE TABLE ingredients(
	ingredient_id SERIAL PRIMARY KEY,
	ingredient_name VARCHAR(100) NOT NULL,
	detail VARCHAR(400),
	rest_id INTEGER REFERENCES resturants(rest_id) ON DELETE RESTRICT NOT NULL,
	UNIQUE (ingredient_name, rest_id)
);

CREATE TABLE food_receipts(
	receipt_id SERIAL PRIMARY KEY,
	food_id INTEGER REFERENCES food_items(food_id) ON DELETE CASCADE NOT NULL,
	ingredient_id INTEGER REFERENCES ingredients(ingredient_id) ON DELETE CASCADE NOT NULL,
	amount REAL NOT NULL
);

CREATE TABLE sale_orders(
	sale_id SERIAL PRIMARY KEY,
	add_time TIMESTAMP NOT NULL,
	checked_time TIMESTAMP,
	order_type ORDER_TYPE NOT NULL,
	rest_id INTEGER REFERENCES resturants(rest_id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE eat_in_order(
	in_id SERIAL PRIMARY KEY,
	guest_no INTEGER,
	table_no INTEGER,
	sale_id INTEGER REFERENCES sale_orders(sale_id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE delivery_order(
	deli_id SERIAL PRIMARY KEY,
	deli_service INTEGER REFERENCES deli_service(d_service_id) ON DELETE NO ACTION NOT NULL,
	ref_code VARCHAR(100) NOT NULL,
	sale_id INTEGER REFERENCES sale_orders(sale_id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE order_foods(
	order_food_id SERIAL PRIMARY KEY,
	order_id INTEGER REFERENCES sale_orders(sale_id) ON DELETE CASCADE NOT NULL,
	food_id INTEGER REFERENCES food_items(food_id) ON DELETE NO ACTION NOT NULL,
	remark VARCHAR(200)
);

CREATE TABLE purchase_orders(
	po_id SERIAL PRIMARY KEY,
	ingredient_id INTEGER REFERENCES ingredients(ingredient_id) ON DELETE NO ACTION NOT NULL,
	purchase_date TIMESTAMP NOT NULL,
	invoice_closed_date TIMESTAMP,
	purchase_amount REAL NOT NULL,
	rest_id INTEGER REFERENCES resturants(rest_id) ON DELETE RESTRICT NOT NULL
);

CREATE TABLE purchase_invoices(
	pi_id SERIAL PRIMARY KEY,
	po_id INTEGER REFERENCES purchase_orders(po_id) ON DELETE RESTRICT NOT NULL,
	invoice_date TIMESTAMP NOT NULL,
	amount REAL NOT NULL,
	price REAL NOT NULL,
	remark VARCHAR(200),
	deleted BOOL NOT NULL DEFAULT false,
	expired_date TIMESTAMP
);
